// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  email     String    @unique
  name      String?
  password  String
  accounts  Account[]
  deletedAt DateTime?
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
}

model Account {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  name      String
  balance   Float     @default(0)
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  entries   Entry[]
  deletedAt DateTime?
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
}

model Entry {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @default(uuid())
  title       String
  description String?
  amount      Float     @default(0)
  expected    Float     @default(0)
  type        EntryType
  order       Int?
  future      Boolean   @default(true)
  accountId   Int
  account     Account   @relation(fields: [accountId], references: [id])
  category    String?
  parentId    Int?
  parent      Entry?    @relation("EntryToEntry", fields: [parentId], references: [id])
  children    Entry[]   @relation("EntryToEntry")
  deletedAt   DateTime?
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

enum EntryType {
  INCOME
  EXPENSE
}
